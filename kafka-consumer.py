from pyspark.sql.session import SparkSession
from pyspark.sql.functions import explode, split, from_json, col
from pyspark.sql.types import StructType, StructField, StringType, IntegerType

spark = SparkSession \
        .builder \
        .appName("spark-kafka-app").getOrCreate()
        
# set log level to remove WARNS from cmd
spark.sparkContext.setLogLevel("ERROR")

df = spark \
        .readStream \
        .format("kafka") \
        .option("kafka.bootstrap.servers", "localhost:9092") \
        .option("subscribe", "spark-topic") \
        .load()\
        .selectExpr("CAST(value AS STRING)")

# TODO: get schema of data from historical data!
# schema = StructType([
#         StructField("timestamp", StringType()),
#         StructField("java_lang_ClassLoading_LoadedClassCount", IntegerType()),
#         StructField("java_lang_ClassLoading_TotalLoadedClassCount", IntegerType()),
#         StructField("java_lang_ClassLoading_UnloadedClassCount", IntegerType()),
#         StructField("java_lang_ClassLoading_Verbose", IntegerType()),
#         StructField("java_lang_Compilation_CompilationTimeMonitoringSupported", StringType()),
#         StructField("java_lang_Compilation_TotalCompilationTime", StringType()),
#         StructField("java_lang_GarbageCollector_CollectionCount", StringType()),
#         StructField("java_lang_GarbageCollector_CollectionTime", StringType()),
#         StructField("java_lang_GarbageCollector_LastGcInfo_GcThreadCount", StringType()),
#         StructField("java_lang_GarbageCollector_LastGcInfo_duration':", StringType()),
#         StructField("java_lang_GarbageCollector_LastGcInfo_endTime", StringType()),
#         StructField("java_lang_GarbageCollector_LastGcInfo_id", StringType()),
#         StructField("java_lang_GarbageCollector_LastGcInfo_memoryUsageAfterGc_committed", StringType()),
#         StructField("java_lang_GarbageCollector_LastGcInfo_memoryUsageAfterGc_init", StringType()),
#         StructField("java_lang_GarbageCollector_LastGcInfo_memoryUsageAfterGc_max", StringType()),
#         StructField("java_lang_GarbageCollector_LastGcInfo_memoryUsageAfterGc_used", StringType()),
#         StructField("java_lang_GarbageCollector_LastGcInfo_memoryUsageBeforeGc_committed", StringType()),
#         StructField("java_lang_GarbageCollector_LastGcInfo_memoryUsageBeforeGc_init", StringType()),
#         StructField("java_lang_GarbageCollector_LastGcInfo_memoryUsageBeforeGc_max", StringType()),
#         StructField("java_lang_GarbageCollector_LastGcInfo_memoryUsageBeforeGc_used", StringType()),
#         StructField("java_lang_GarbageCollector_LastGcInfo_startTime", StringType()),
#         StructField("java_lang_GarbageCollector_Valid", StringType()),
#         StructField("java_lang_MemoryManager_Valid", StringType()),
#         StructField("java_lang_MemoryPool_CollectionUsageThreshold", StringType()),
#         StructField("java_lang_MemoryPool_CollectionUsageThresholdCount", StringType()),
#         StructField("java_lang_MemoryPool_CollectionUsageThresholdExceeded", StringType()),
#         StructField("java_lang_MemoryPool_CollectionUsageThresholdSupported", StringType()),
#         StructField("java_lang_MemoryPool_CollectionUsage_committed", StringType()),
#         StructField("java_lang_MemoryPool_CollectionUsage_init", StringType()),
#         StructField("java_lang_MemoryPool_CollectionUsage_max", StringType()),
#         StructField("java_lang_MemoryPool_CollectionUsage_used", StringType()),
#         StructField("java_lang_MemoryPool_PeakUsage_committed", StringType()),
#         StructField("java_lang_MemoryPool_PeakUsage_init", StringType()),
#         StructField("java_lang_MemoryPool_PeakUsage_max", StringType()),
#         StructField("java_lang_MemoryPool_PeakUsage_used", StringType()),
#         StructField("java_lang_MemoryPool_UsageThreshold", StringType()),
#         StructField("java_lang_MemoryPool_UsageThresholdCount", StringType()),
#         StructField("java_lang_MemoryPool_UsageThresholdExceeded", StringType()),
#         StructField("java_lang_MemoryPool_UsageThresholdSupported", StringType()),
#         StructField("java_lang_MemoryPool_Usage_committed", StringType()),
#         StructField("java_lang_MemoryPool_Usage_init", StringType()),
#         StructField("java_lang_MemoryPool_Usage_max", StringType()),
#         StructField("java_lang_MemoryPool_Usage_used", StringType()),
#         StructField("java_lang_MemoryPool_Valid", StringType()),
#         StructField("java_lang_Memory_HeapMemoryUsage_committed", StringType()),
#         StructField("java_lang_Memory_HeapMemoryUsage_init", StringType()),
#         StructField("java_lang_Memory_HeapMemoryUsage_max", StringType()),
#         StructField("java_lang_Memory_NonHeapMemoryUsage_used", StringType()),
#         StructField("java_lang_Memory_ObjectPendingFinalizationCount", StringType()),
#         StructField("java_lang_Memory_Verbose", StringType()),
#         StructField("java_lang_OperatingSystem_AvailableProcessors", StringType()),
#         StructField("java_lang_OperatingSystem_CommittedVirtualMemorySize", StringType()),
#         StructField("java_lang_OperatingSystem_FreePhysicalMemorySize", StringType()),
#         StructField("java_lang_OperatingSystem_FreeSwapSpaceSize", StringType()),
#         StructField("java_lang_OperatingSystem_ProcessCpuLoad", StringType()),
#         StructField("java_lang_OperatingSystem_ProcessCpuTime", StringType()),
#         StructField("java_lang_OperatingSystem_SystemCpuLoad", StringType()),
#         StructField("java_lang_OperatingSystem_SystemLoadAverage", StringType()),
#         StructField("java_lang_OperatingSystem_TotalPhysicalMemorySize", StringType()),
#         StructField("java_lang_OperatingSystem_TotalSwapSpaceSize", StringType()),
#         StructField("java_lang_Runtime_BootClassPathSupported", StringType()),
#         StructField("java_lang_Runtime_StartTime", StringType()),
#         StructField("java_lang_Runtime_Uptime", StringType()),
#         StructField("java_lang_Threading_CurrentThreadCpuTime", StringType()),
#         StructField("java_lang_Threading_CurrentThreadCpuTimeSupported", StringType()),
#         StructField("java_lang_Threading_CurrentThreadUserTime", StringType()),
#         StructField("java_lang_Threading_DaemonThreadCount", StringType()),
#         StructField("java_lang_Threading_ObjectMonitorUsageSupported", StringType()),
#         StructField("java_lang_Threading_PeakThreadCount", StringType()),
#         StructField("java_lang_Threading_SynchronizerUsageSupported", StringType()),
#         StructField("java_lang_Threading_ThreadAllocatedMemoryEnabled", StringType()),
#         StructField("java_lang_Threading_ThreadAllocatedMemorySupported", StringType()),
#         StructField("java_lang_Threading_ThreadContentionMonitoringEnabled", StringType()),
#         StructField("java_lang_Threading_ThreadContentionMonitoringSupported", StringType()),
#         StructField("java_lang_Threading_ThreadCount", StringType()),
#         StructField("java_lang_Threading_ThreadCpuTimeEnabled", StringType()),
#         StructField("java_lang_Threading_ThreadCpuTimeSupported", StringType()),
#         StructField("java_lang_Threading_TotalStartedThreadCount", StringType()),
#         StructField("java_nio_BufferPool_Count", StringType()),
#         StructField("java_nio_BufferPool_MemoryUsed", StringType()),
#         StructField("java_nio_BufferPool_TotalCapacity", StringType()),
#         StructField("jmx_config_reload_failure_total", StringType()),
#         StructField("jmx_config_reload_success_total", StringType()),
#         StructField("jmx_exporter_build_info", StringType()),
#         StructField("jmx_scrape_cached_beans", StringType()),
#         StructField("jmx_scrape_duration_seconds", StringType()),
#         StructField("jmx_scrape_error", StringType()),
#         StructField("jvm_buffer_pool_capacity_bytes", StringType()),
#         StructField("jvm_buffer_pool_used_buffers", StringType()),
#         StructField("jvm_buffer_pool_used_bytes", StringType()),
#         StructField("jvm_classes_loaded", StringType()),
#         StructField("jvm_classes_loaded_total", StringType()),
#         StructField("jvm_classes_unloaded_total", StringType()),
#         StructField("jvm_gc_collection_seconds_count", StringType()),
#         StructField("jvm_gc_collection_seconds_sum", StringType()),
#         StructField("jvm_info", StringType()),
#         StructField("jvm_memory_bytes_committed", StringType()),
#         StructField("jvm_memory_bytes_init", StringType()),
#         StructField("jvm_memory_bytes_max", StringType()),
#         StructField("jvm_memory_bytes_used", StringType()),
#         StructField("jvm_memory_pool_allocated_bytes_total", StringType()),
#         StructField("jvm_memory_pool_bytes_committed", StringType()),
#         StructField("jvm_memory_pool_bytes_init", StringType()),
#         StructField("jvm_memory_pool_bytes_max", StringType()),
#         StructField("jvm_memory_pool_bytes_used", StringType()),
#         StructField("jvm_threads_current", StringType()),
#         StructField("jvm_threads_daemon", StringType()),
#         StructField("jvm_threads_deadlocked", StringType()),
#         StructField("jvm_threads_deadlocked_monitor", StringType()),
#         StructField("jvm_threads_peak", StringType()),
#         StructField("jvm_threads_started_total", StringType()),
#         StructField("jvm_threads_state", StringType()),
#         StructField("process_cpu_seconds_total", StringType()),
#         StructField("process_start_time_seconds", StringType()),
#         StructField("scrape_duration_seconds", StringType()),
#         StructField("scrape_samples_post_metric_relabeling", StringType()),
#         StructField("scrape_samples_scraped", StringType()),
#         StructField("scrape_series_added", StringType()),
#         StructField("up", StringType())
#         ])

json_df = df.withColumn("jsonData", from_json(col("value"), schema)).select("jsondata.*")

json_df.writeStream.format('console').outputMode('append').start().awaitTermination()
